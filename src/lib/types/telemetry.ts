// This file has been generated by Specta. DO NOT EDIT.

export type Proximity = { is_left: boolean; is_right: boolean }

export type Gear = string

export type PlayerLapTimes = PlayerLapTimesData[]

export type RaceLaps = number

export type SessionTime = string

export type TelemetryGraph = { ts: number; throttle: number; brake: number; abs_active: boolean }

export type GearBlinkRpm = number

export type PositionsTotal = number

export type Rpm = number

export type DeltaOptimalTime = string

export type StandingsDriver = { car_id: number; position: number; user_name: string; car_number: string; irating: string; license: string; leader_gap: string; best_lap: string; last_lap: string; is_player: boolean; is_leader: boolean; is_in_pits: boolean }

export type TrackId = number

export type IncidentLimit = number

export type TrackMap = TrackMapDriver[]

export type Lap = number

export type Relative = RelativeDriver[]

export type Incidents = number

export type StrengthOfField = number

export type CurrentTime = string

export type SessionState = string

export type Position = number

export type TrackMapDriver = { car_id: number; position: number; is_leader: boolean; is_player: boolean; lap_dist_pct: number; is_in_pits: boolean; is_off_track: boolean; is_off_world: boolean }

export type PlayerLapTimesData = { lap: number; lap_time: string }

export type LapsTotal = number

export type Active = boolean

export type Speed = number

export type GearShiftRpm = number

export type GapPrev = string

export type Standings = StandingsDriver[]

export type SessionTimeTotal = string

export type GapNext = string

export type DeltaLastTime = string

export type LapTime = string

export type RelativeDriver = { car_id: number; position: number; user_name: string; car_number: string; irating: string; license: string; player_relative_gap: string; is_player: boolean; is_in_pits: boolean; is_off_track: boolean; is_off_world: boolean }

